---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<MOVIE_DB_API_KEY>&include_adult=false&language=en-US&page=1&query=The%20Lion%20King
    body:
      encoding: US-ASCII
      string: ''
    headers:
      X-Api-Key:
      - "<MOVIE_DB_API_KEY>"
      User-Agent:
      - Faraday v2.9.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 02 Jul 2024 22:24:18 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=14984
      X-Memc:
      - HIT
      X-Memc-Key:
      - 00b5f36206a54c835f17b69e1c5ea6c2
      X-Memc-Age:
      - '8030'
      X-Memc-Expires:
      - '14984'
      Etag:
      - W/"f338003e287985c09173bbb808f9d1f1"
      Vary:
      - Accept-Encoding,accept-encoding
      - Origin
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 66651bffa749255769c1c4956851dc96.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX50-C2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - ZVe2MjH3cTqpoSFtN0lA-Hot2jcZfE7g862LksNGoxI3QWkzuEN91A==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 02 Jul 2024 22:24:18 GMT
recorded_with: VCR 6.2.0
